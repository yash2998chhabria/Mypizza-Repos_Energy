{"version":3,"sources":["components/FiltersComponent.js","components/PizzaComponent.js","components/NavbarComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","Filters","props","classes","handleChange","e","target","ariaValueNow","setFilters","filters","price","name","value","style","paddingTop","Row","Col","sm","size","offset","Card","CardHeader","Label","margin","category","toUpperCase","ButtonGroup","Button","onClick","color","type","id","placeholder","onChange","className","Typography","gutterBottom","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","CurrentPizzas","DisplayPizza","pizza","lg","CardImg","top","src","picture","alt","CardBody","CardTitle","tag","base","cheese_type","CardText","filteredpizzas","map","i","Header","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","Main","pizzalist","setPizzalist","isPending","setisPending","error","setError","useEffect","fetch","then","res","ok","Error","json","data","catch","err","message","filter","Alert","Spinner","height","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d05904aa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Button, ButtonGroup, Card, CardHeader, Row, Col, Label} from 'reactstrap';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: 300,\r\n    },\r\n  });\r\n  \r\n\r\n\r\nconst Filters = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.ariaValueNow)\r\n        {\r\n            props.setFilters({...props.filters, price:e.target.ariaValueNow })\r\n        }\r\n        else \r\n        {\r\n            props.setFilters({...props.filters, [e.target.name]:e.target.value})\r\n        }\r\n        \r\n    }\r\n\r\n    return ( \r\n\r\n        <div  style={{ paddingTop: '50px' }}>\r\n            <Row>\r\n            {/* <Col md='10' style={{position: 'absolute', left: '50%',transform: 'translate(-50%)' }}> */}\r\n            <Col sm={{ size: 10, offset: 1 }}>\r\n            \r\n            <Card>\r\n            <CardHeader>Filters</CardHeader>\r\n\r\n            <Label style={{ margin:'10px' }}>Category: {props.filters.category.toUpperCase()}{!props.filters.category && <span>ALL</span>}</Label>\r\n            \r\n            <ButtonGroup style={{  margin:'10px' }}>\r\n                <Button name='category' onClick={handleChange} color=\"success\" value='Veg'>Veg</Button>\r\n                <Button name='category' onClick={handleChange} color=\"danger\" value='Nonveg'>Non Veg</Button>\r\n                <Button name='category' onClick={handleChange} color=\"secondary\" value=''>ALL</Button>\r\n            </ButtonGroup>\r\n\r\n            <Label style={{ margin:'10px' }}>Base:</Label>\r\n            <select \r\n            type='text'\r\n            name='base'\r\n            id='base_type'\r\n            placeholder='Choose Base type'\r\n            onChange={handleChange}\r\n            style={{ margin:'10px' }}\r\n            >\r\n            <option value=\"\"></option>\r\n            <option value=\"Thin Crust\">Thin Crust</option>\r\n            <option value=\"Regular Base\">Regular Base</option>\r\n            <option value=\"Flat Bread\">Flat bread</option>\r\n            <option value=\"Multigrain\">Mutigrain</option>\r\n            </select>\r\n\r\n            <Label style={{ margin:'10px' }}>Cheese options:</Label>\r\n            <select \r\n            type='text'\r\n            name='cheese_type'\r\n            id='cheese_type'\r\n            placeholder='Choose Cheese type'\r\n            onChange={handleChange}\r\n            style={{ margin:'10px' }}\r\n            >\r\n            <option value=\"\"></option>\r\n            <option value=\"Cheese Burst\">Cheese Burst</option>\r\n            <option value=\"Cheese Topping\">Cheese Topping</option>\r\n            <option value=\"No Cheese\">No Cheese</option>\r\n            </select>\r\n\r\n\r\n            <div className={classes.root} style={{ margin:'10px' }}>\r\n                <Typography id=\"discrete-slider\" gutterBottom>\r\n                    Price Range: [100 - {props.filters.price}]\r\n                </Typography>\r\n                <Slider\r\n                    defaultValue={600}\r\n                    aria-labelledby=\"discrete-slider\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={50}\r\n                    marks\r\n                    min={100}\r\n                    max={600}\r\n                    name='price'\r\n                    onChange={handleChange}\r\n                />\r\n                </div>\r\n            \r\n            </Card>\r\n            </Col>\r\n            </Row>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Filters;","import React from 'react';\r\nimport {Card,CardImg,CardBody,CardTitle,Button,Row,Col, CardText} from 'reactstrap';\r\n\r\nconst CurrentPizzas = (props) => {\r\n\r\n    const DisplayPizza = ( {pizza} ) => {\r\n        return (\r\n            <div style={{ paddingTop: '50px' }} >\r\n            <Card>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <CardImg top width=\"100%\" src={pizza.picture} alt={pizza.name}/>\r\n                    </Col>\r\n                <Col lg=\"6\" >\r\n                    <CardBody>\r\n                        <CardTitle tag=\"h5\">{pizza.name}</CardTitle>\r\n                        <ul>\r\n                            <li>{pizza.category}</li>\r\n                            <li>{pizza.base}</li>\r\n                            <li>{pizza.cheese_type}</li>\r\n                        </ul>\r\n                        <CardText> Rs: {pizza.price} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button>ADD</Button> </CardText>\r\n                        \r\n                    </CardBody>\r\n                </Col>\r\n                </Row>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (  \r\n        <div>\r\n        { props.filteredpizzas.map((pizza,i) => { return( <DisplayPizza key={i} pizza={pizza}/>) }) }\r\n        </div>\r\n            );\r\n}\r\n \r\nexport default CurrentPizzas;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">My Pizza</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/\">File</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Edit</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/\">View</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/\">Help</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavbarText>Repos Energy</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React , {useState, useEffect} from 'react'\r\nimport Filters from './FiltersComponent'\r\nimport CurrentPizzas from './PizzaComponent'\r\nimport Header from './NavbarComponent'\r\nimport { Row, Col, Alert, Spinner} from \"reactstrap\"\r\n\r\n\r\nconst Main = () => {\r\n\r\n  const [pizzalist, setPizzalist ] = useState(null)\r\n  const [isPending , setisPending ] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [filters,setFilters] = useState({category:'',base:'',cheese_type:'',price: 600})\r\n\r\n  useEffect( () => {\r\n    fetch('https://yashchhabria2998.pythonanywhere.com/api/')\r\n    .then(res => {\r\n      if(!res.ok){\r\n        throw Error('Could Not Fetch Pizza Data')\r\n      }\r\n      return res.json()\r\n    })\r\n    .then(data => {\r\n      setPizzalist(data);\r\n      setisPending(false);\r\n      setError(null)\r\n    })\r\n    .catch(err => {\r\n      setError(err.message)\r\n      setisPending(false);\r\n    })\r\n  }, [])\r\n  \r\n  let filteredpizzas=''\r\n\r\n  if(pizzalist) \r\n  {\r\n  filteredpizzas = pizzalist\r\n\r\n  if(filters.category)\r\n  {\r\n    filteredpizzas = filteredpizzas.filter(pizza => pizza.category === filters.category)\r\n  }\r\n\r\n  if(filters.base)\r\n  {\r\n    filteredpizzas = filteredpizzas.filter(pizza => pizza.base === filters.base)\r\n  }\r\n\r\n  if(filters.cheese_type)\r\n  {\r\n    filteredpizzas = filteredpizzas.filter(pizza => pizza.cheese_type === filters.cheese_type)\r\n  }\r\n\r\n  if(filters.price < 600)\r\n  {\r\n    filteredpizzas = filteredpizzas.filter(pizza => pizza.price <= filters.price)\r\n  }\r\n}\r\n\r\n\r\n  return (<div>\r\n          <Row> \r\n            <Col lg=\"12\">\r\n            <Header />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"5\">\r\n            <Filters filters={filters} setFilters={setFilters}/>\r\n            </Col>\r\n            <Col lg=\"7\">\r\n            {error && <Alert color=\"danger\">{error}</Alert>}\r\n            {isPending && <Spinner type=\"grow\" color=\"danger\"  style={{ width: '10rem', height: '10rem' }} />}\r\n            {filteredpizzas.length ? <CurrentPizzas filteredpizzas={filteredpizzas}/> : !error ? <Alert color=\"warning\">No Pizzas Available for selected Filters!!</Alert>: <div></div>}\r\n            </Col>\r\n          </Row>\r\n          </div> );\r\n  }\r\n   \r\n  export default Main;\r\n","import React from 'react'\r\nimport Main from './components/MainComponent';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n  return ( <div>\r\n    <Main />\r\n  </div> );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}